#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_Asistencia_BLHH.DataClase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_Asistencia")]
	public partial class DCTablasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertAsistencia(Asistencia instance);
    partial void UpdateAsistencia(Asistencia instance);
    partial void DeleteAsistencia(Asistencia instance);
    partial void InsertEmpleado_Puesto(Empleado_Puesto instance);
    partial void UpdateEmpleado_Puesto(Empleado_Puesto instance);
    partial void DeleteEmpleado_Puesto(Empleado_Puesto instance);
    partial void InsertFalta(Falta instance);
    partial void UpdateFalta(Falta instance);
    partial void DeleteFalta(Falta instance);
    partial void InsertHorario(Horario instance);
    partial void UpdateHorario(Horario instance);
    partial void DeleteHorario(Horario instance);
    partial void InsertPuesto(Puesto instance);
    partial void UpdatePuesto(Puesto instance);
    partial void DeletePuesto(Puesto instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    #endregion
		
		public DCTablasDataContext() : 
				base(global::Sistema_Asistencia_BLHH.Properties.Settings.Default.db_AsistenciaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCTablasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Area> Area
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<Asistencia> Asistencia
		{
			get
			{
				return this.GetTable<Asistencia>();
			}
		}
		
		public System.Data.Linq.Table<Empleado_Puesto> Empleado_Puesto
		{
			get
			{
				return this.GetTable<Empleado_Puesto>();
			}
		}
		
		public System.Data.Linq.Table<Falta> Falta
		{
			get
			{
				return this.GetTable<Falta>();
			}
		}
		
		public System.Data.Linq.Table<Horario> Horario
		{
			get
			{
				return this.GetTable<Horario>();
			}
		}
		
		public System.Data.Linq.Table<Puesto> Puesto
		{
			get
			{
				return this.GetTable<Puesto>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdArea;
		
		private System.Nullable<int> _IdHorario;
		
		private string _NombreArea;
		
		private string _Descripcion;
		
		private EntitySet<Empleado> _Empleado;
		
		private EntityRef<Horario> _Horario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAreaChanging(int value);
    partial void OnIdAreaChanged();
    partial void OnIdHorarioChanging(System.Nullable<int> value);
    partial void OnIdHorarioChanged();
    partial void OnNombreAreaChanging(string value);
    partial void OnNombreAreaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Area()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			this._Horario = default(EntityRef<Horario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArea", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdArea
		{
			get
			{
				return this._IdArea;
			}
			set
			{
				if ((this._IdArea != value))
				{
					this.OnIdAreaChanging(value);
					this.SendPropertyChanging();
					this._IdArea = value;
					this.SendPropertyChanged("IdArea");
					this.OnIdAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHorario", DbType="Int")]
		public System.Nullable<int> IdHorario
		{
			get
			{
				return this._IdHorario;
			}
			set
			{
				if ((this._IdHorario != value))
				{
					if (this._Horario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHorarioChanging(value);
					this.SendPropertyChanging();
					this._IdHorario = value;
					this.SendPropertyChanged("IdHorario");
					this.OnIdHorarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreArea", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NombreArea
		{
			get
			{
				return this._NombreArea;
			}
			set
			{
				if ((this._NombreArea != value))
				{
					this.OnNombreAreaChanging(value);
					this.SendPropertyChanging();
					this._NombreArea = value;
					this.SendPropertyChanged("NombreArea");
					this.OnNombreAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Empleado", Storage="_Empleado", ThisKey="IdArea", OtherKey="IdArea")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horario_Area", Storage="_Horario", ThisKey="IdHorario", OtherKey="IdHorario", IsForeignKey=true)]
		public Horario Horario
		{
			get
			{
				return this._Horario.Entity;
			}
			set
			{
				Horario previousValue = this._Horario.Entity;
				if (((previousValue != value) 
							|| (this._Horario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Horario.Entity = null;
						previousValue.Area.Remove(this);
					}
					this._Horario.Entity = value;
					if ((value != null))
					{
						value.Area.Add(this);
						this._IdHorario = value.IdHorario;
					}
					else
					{
						this._IdHorario = default(Nullable<int>);
					}
					this.SendPropertyChanged("Horario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asistencia")]
	public partial class Asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAsistencia;
		
		private int _IdEmpleado;
		
		private System.DateTime _FechaAsistencia;
		
		private System.Nullable<System.TimeSpan> _HoraEntrada;
		
		private System.Nullable<System.TimeSpan> _HoraSalida;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAsistenciaChanging(int value);
    partial void OnIdAsistenciaChanged();
    partial void OnIdEmpleadoChanging(int value);
    partial void OnIdEmpleadoChanged();
    partial void OnFechaAsistenciaChanging(System.DateTime value);
    partial void OnFechaAsistenciaChanged();
    partial void OnHoraEntradaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraEntradaChanged();
    partial void OnHoraSalidaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraSalidaChanged();
    #endregion
		
		public Asistencia()
		{
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAsistencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAsistencia
		{
			get
			{
				return this._IdAsistencia;
			}
			set
			{
				if ((this._IdAsistencia != value))
				{
					this.OnIdAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._IdAsistencia = value;
					this.SendPropertyChanged("IdAsistencia");
					this.OnIdAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="Int NOT NULL")]
		public int IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAsistencia", DbType="Date NOT NULL")]
		public System.DateTime FechaAsistencia
		{
			get
			{
				return this._FechaAsistencia;
			}
			set
			{
				if ((this._FechaAsistencia != value))
				{
					this.OnFechaAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._FechaAsistencia = value;
					this.SendPropertyChanged("FechaAsistencia");
					this.OnFechaAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraEntrada", DbType="Time")]
		public System.Nullable<System.TimeSpan> HoraEntrada
		{
			get
			{
				return this._HoraEntrada;
			}
			set
			{
				if ((this._HoraEntrada != value))
				{
					this.OnHoraEntradaChanging(value);
					this.SendPropertyChanging();
					this._HoraEntrada = value;
					this.SendPropertyChanged("HoraEntrada");
					this.OnHoraEntradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraSalida", DbType="Time")]
		public System.Nullable<System.TimeSpan> HoraSalida
		{
			get
			{
				return this._HoraSalida;
			}
			set
			{
				if ((this._HoraSalida != value))
				{
					this.OnHoraSalidaChanging(value);
					this.SendPropertyChanging();
					this._HoraSalida = value;
					this.SendPropertyChanged("HoraSalida");
					this.OnHoraSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Asistencia", Storage="_Empleado", ThisKey="IdEmpleado", OtherKey="IdEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Asistencia.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Asistencia.Add(this);
						this._IdEmpleado = value.IdEmpleado;
					}
					else
					{
						this._IdEmpleado = default(int);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado_Puesto")]
	public partial class Empleado_Puesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmpleado;
		
		private int _IdPuesto;
		
		private System.DateTime _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private EntityRef<Puesto> _Puesto;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpleadoChanging(int value);
    partial void OnIdEmpleadoChanged();
    partial void OnIdPuestoChanging(int value);
    partial void OnIdPuestoChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    #endregion
		
		public Empleado_Puesto()
		{
			this._Puesto = default(EntityRef<Puesto>);
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPuesto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPuesto
		{
			get
			{
				return this._IdPuesto;
			}
			set
			{
				if ((this._IdPuesto != value))
				{
					if (this._Puesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPuestoChanging(value);
					this.SendPropertyChanging();
					this._IdPuesto = value;
					this.SendPropertyChanged("IdPuesto");
					this.OnIdPuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="Date")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Puesto_Empleado_Puesto", Storage="_Puesto", ThisKey="IdPuesto", OtherKey="IdPuesto", IsForeignKey=true)]
		public Puesto Puesto
		{
			get
			{
				return this._Puesto.Entity;
			}
			set
			{
				Puesto previousValue = this._Puesto.Entity;
				if (((previousValue != value) 
							|| (this._Puesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Puesto.Entity = null;
						previousValue.Empleado_Puesto.Remove(this);
					}
					this._Puesto.Entity = value;
					if ((value != null))
					{
						value.Empleado_Puesto.Add(this);
						this._IdPuesto = value.IdPuesto;
					}
					else
					{
						this._IdPuesto = default(int);
					}
					this.SendPropertyChanged("Puesto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Empleado_Puesto", Storage="_Empleado", ThisKey="IdEmpleado", OtherKey="IdEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Empleado_Puesto.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Empleado_Puesto.Add(this);
						this._IdEmpleado = value.IdEmpleado;
					}
					else
					{
						this._IdEmpleado = default(int);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Falta")]
	public partial class Falta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFalta;
		
		private int _IdEmpleado;
		
		private System.DateTime _FechaFalta;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFaltaChanging(int value);
    partial void OnIdFaltaChanged();
    partial void OnIdEmpleadoChanging(int value);
    partial void OnIdEmpleadoChanged();
    partial void OnFechaFaltaChanging(System.DateTime value);
    partial void OnFechaFaltaChanged();
    #endregion
		
		public Falta()
		{
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFalta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFalta
		{
			get
			{
				return this._IdFalta;
			}
			set
			{
				if ((this._IdFalta != value))
				{
					this.OnIdFaltaChanging(value);
					this.SendPropertyChanging();
					this._IdFalta = value;
					this.SendPropertyChanged("IdFalta");
					this.OnIdFaltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="Int NOT NULL")]
		public int IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFalta", DbType="Date NOT NULL")]
		public System.DateTime FechaFalta
		{
			get
			{
				return this._FechaFalta;
			}
			set
			{
				if ((this._FechaFalta != value))
				{
					this.OnFechaFaltaChanging(value);
					this.SendPropertyChanging();
					this._FechaFalta = value;
					this.SendPropertyChanged("FechaFalta");
					this.OnFechaFaltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Falta", Storage="_Empleado", ThisKey="IdEmpleado", OtherKey="IdEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Falta.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Falta.Add(this);
						this._IdEmpleado = value.IdEmpleado;
					}
					else
					{
						this._IdEmpleado = default(int);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Horario")]
	public partial class Horario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHorario;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private System.TimeSpan _HoraEntrada;
		
		private System.TimeSpan _HoraSalida;
		
		private EntitySet<Area> _Area;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHorarioChanging(int value);
    partial void OnIdHorarioChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    partial void OnHoraEntradaChanging(System.TimeSpan value);
    partial void OnHoraEntradaChanged();
    partial void OnHoraSalidaChanging(System.TimeSpan value);
    partial void OnHoraSalidaChanged();
    #endregion
		
		public Horario()
		{
			this._Area = new EntitySet<Area>(new Action<Area>(this.attach_Area), new Action<Area>(this.detach_Area));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHorario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdHorario
		{
			get
			{
				return this._IdHorario;
			}
			set
			{
				if ((this._IdHorario != value))
				{
					this.OnIdHorarioChanging(value);
					this.SendPropertyChanging();
					this._IdHorario = value;
					this.SendPropertyChanged("IdHorario");
					this.OnIdHorarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="Date")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="Date")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraEntrada", DbType="Time NOT NULL")]
		public System.TimeSpan HoraEntrada
		{
			get
			{
				return this._HoraEntrada;
			}
			set
			{
				if ((this._HoraEntrada != value))
				{
					this.OnHoraEntradaChanging(value);
					this.SendPropertyChanging();
					this._HoraEntrada = value;
					this.SendPropertyChanged("HoraEntrada");
					this.OnHoraEntradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraSalida", DbType="Time NOT NULL")]
		public System.TimeSpan HoraSalida
		{
			get
			{
				return this._HoraSalida;
			}
			set
			{
				if ((this._HoraSalida != value))
				{
					this.OnHoraSalidaChanging(value);
					this.SendPropertyChanging();
					this._HoraSalida = value;
					this.SendPropertyChanged("HoraSalida");
					this.OnHoraSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horario_Area", Storage="_Area", ThisKey="IdHorario", OtherKey="IdHorario")]
		public EntitySet<Area> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				this._Area.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Area(Area entity)
		{
			this.SendPropertyChanging();
			entity.Horario = this;
		}
		
		private void detach_Area(Area entity)
		{
			this.SendPropertyChanging();
			entity.Horario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Puesto")]
	public partial class Puesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPuesto;
		
		private string _NombrePuesto;
		
		private string _Descripcion;
		
		private EntitySet<Empleado_Puesto> _Empleado_Puesto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPuestoChanging(int value);
    partial void OnIdPuestoChanged();
    partial void OnNombrePuestoChanging(string value);
    partial void OnNombrePuestoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Puesto()
		{
			this._Empleado_Puesto = new EntitySet<Empleado_Puesto>(new Action<Empleado_Puesto>(this.attach_Empleado_Puesto), new Action<Empleado_Puesto>(this.detach_Empleado_Puesto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPuesto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPuesto
		{
			get
			{
				return this._IdPuesto;
			}
			set
			{
				if ((this._IdPuesto != value))
				{
					this.OnIdPuestoChanging(value);
					this.SendPropertyChanging();
					this._IdPuesto = value;
					this.SendPropertyChanged("IdPuesto");
					this.OnIdPuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombrePuesto", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string NombrePuesto
		{
			get
			{
				return this._NombrePuesto;
			}
			set
			{
				if ((this._NombrePuesto != value))
				{
					this.OnNombrePuestoChanging(value);
					this.SendPropertyChanging();
					this._NombrePuesto = value;
					this.SendPropertyChanged("NombrePuesto");
					this.OnNombrePuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Puesto_Empleado_Puesto", Storage="_Empleado_Puesto", ThisKey="IdPuesto", OtherKey="IdPuesto")]
		public EntitySet<Empleado_Puesto> Empleado_Puesto
		{
			get
			{
				return this._Empleado_Puesto;
			}
			set
			{
				this._Empleado_Puesto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado_Puesto(Empleado_Puesto entity)
		{
			this.SendPropertyChanging();
			entity.Puesto = this;
		}
		
		private void detach_Empleado_Puesto(Empleado_Puesto entity)
		{
			this.SendPropertyChanging();
			entity.Puesto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmpleado;
		
		private int _IdArea;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _DNI;
		
		private System.Nullable<char> _Genero;
		
		private string _Telefono;
		
		private System.Nullable<char> _Estado;
		
		private EntitySet<Asistencia> _Asistencia;
		
		private EntitySet<Empleado_Puesto> _Empleado_Puesto;
		
		private EntitySet<Falta> _Falta;
		
		private EntityRef<Area> _Area;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpleadoChanging(int value);
    partial void OnIdEmpleadoChanged();
    partial void OnIdAreaChanging(int value);
    partial void OnIdAreaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnGeneroChanging(System.Nullable<char> value);
    partial void OnGeneroChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEstadoChanging(System.Nullable<char> value);
    partial void OnEstadoChanged();
    #endregion
		
		public Empleado()
		{
			this._Asistencia = new EntitySet<Asistencia>(new Action<Asistencia>(this.attach_Asistencia), new Action<Asistencia>(this.detach_Asistencia));
			this._Empleado_Puesto = new EntitySet<Empleado_Puesto>(new Action<Empleado_Puesto>(this.attach_Empleado_Puesto), new Action<Empleado_Puesto>(this.detach_Empleado_Puesto));
			this._Falta = new EntitySet<Falta>(new Action<Falta>(this.attach_Falta), new Action<Falta>(this.detach_Falta));
			this._Area = default(EntityRef<Area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdArea", DbType="Int NOT NULL")]
		public int IdArea
		{
			get
			{
				return this._IdArea;
			}
			set
			{
				if ((this._IdArea != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAreaChanging(value);
					this.SendPropertyChanging();
					this._IdArea = value;
					this.SendPropertyChanged("IdArea");
					this.OnIdAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero", DbType="Char(1)")]
		public System.Nullable<char> Genero
		{
			get
			{
				return this._Genero;
			}
			set
			{
				if ((this._Genero != value))
				{
					this.OnGeneroChanging(value);
					this.SendPropertyChanging();
					this._Genero = value;
					this.SendPropertyChanged("Genero");
					this.OnGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Char(1)")]
		public System.Nullable<char> Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Asistencia", Storage="_Asistencia", ThisKey="IdEmpleado", OtherKey="IdEmpleado")]
		public EntitySet<Asistencia> Asistencia
		{
			get
			{
				return this._Asistencia;
			}
			set
			{
				this._Asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Empleado_Puesto", Storage="_Empleado_Puesto", ThisKey="IdEmpleado", OtherKey="IdEmpleado")]
		public EntitySet<Empleado_Puesto> Empleado_Puesto
		{
			get
			{
				return this._Empleado_Puesto;
			}
			set
			{
				this._Empleado_Puesto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Falta", Storage="_Falta", ThisKey="IdEmpleado", OtherKey="IdEmpleado")]
		public EntitySet<Falta> Falta
		{
			get
			{
				return this._Falta;
			}
			set
			{
				this._Falta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Empleado", Storage="_Area", ThisKey="IdArea", OtherKey="IdArea", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._IdArea = value.IdArea;
					}
					else
					{
						this._IdArea = default(int);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Empleado_Puesto(Empleado_Puesto entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Empleado_Puesto(Empleado_Puesto entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Falta(Falta entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Falta(Falta entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
}
#pragma warning restore 1591
